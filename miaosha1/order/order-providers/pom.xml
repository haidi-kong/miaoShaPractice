<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>order</artifactId>
    <groupId>com.travel.order</groupId>
    <version>0.0.1-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <groupId>com.travel.order.provider</groupId>
  <artifactId>order-providers</artifactId>
  <modelVersion>4.0.0</modelVersion>
  <packaging>jar</packaging>
  <version>0.0.1-SNAPSHOT</version>

  <name>order-providers</name>
  <description>订单服务提供</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <common.version>0.0.1-SNAPSHOT</common.version>
    <docker.host>http://81.69.254.72:2275</docker.host>
    <docker.maven.plugin.version>1.2.1</docker.maven.plugin.version>
  </properties>

  <dependencies>
    <!-- 订单api包 -->
    <dependency>
      <artifactId>order-apis</artifactId>
      <groupId>com.travel.order.apis</groupId>
      <version>${common.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <!-- 指定该Main Class为全局的唯一入口 -->
          <mainClass>com.travel.order.providers.OrderApplication</mainClass>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中-->
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.0</version>
        <configuration>
          <source>8</source>
          <target>8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>build-image</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <imageName>miaosha1-${project.artifactId}:${project.version}</imageName>
          <dockerHost>${docker.host}</dockerHost>
          <baseImage>java:8</baseImage>
          <entryPoint>["java", "-jar", "-Xms128m", "-Xmx128m", "-Xmn64m", "-Dspring.profiles.active=prod","/${project.build.finalName}.jar"]
          </entryPoint>
          <resources>
            <resource>
              <targetPath>/</targetPath>
              <directory>${project.build.directory}</directory>
              <include>${project.build.finalName}.jar</include>
            </resource>
          </resources>
        </configuration>
      </plugin>
    </plugins>

    <resources>
      <resource> <!--配置文件路径 -->
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>application.properties</include>
        </includes>
      </resource>

      <!--配置资源路径要不访问不到页面-->
      <resource>
        <directory>src/main/resources</directory><!--资源文件的路径-->
        <includes>
          <include>**/*.*</include>
        </includes>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.yml</include>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
        </includes>
        <filtering>false</filtering>
      </resource>
    </resources>

  </build>
</project>
